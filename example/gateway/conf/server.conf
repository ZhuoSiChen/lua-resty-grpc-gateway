lua_code_cache off;

server {
  listen 80;
  server_name localhost;

  access_log /dev/stdout;
  error_log /dev/stderr;

  location /helloworld.Greeter/SayHello {
    rewrite_by_lua_block {
      require("grpc-gateway.cors")
    }

    grpc_set_header Content-Type application/grpc;
    grpc_pass backend:9000;
  }

  location /rest {
    access_by_lua_block {
      local proto = require("grpc-gateway.proto")
      local gateway = require("grpc-gateway.request")
      local p, err = proto.new("/etc/proto/helloworld.proto")
      if err then
        ngx.log(ngx.ERR, ("proto load error: %s"):format(err))
        return
      end
      local req = gateway.new(p)
      err = req:transform("helloworld.Greeter", "SayHello")
      if err then
        ngx.log(ngx.ERR, ("trasnform request error: %s"):format(err))
        return
      end
    }
    body_filter_by_lua_block {
      local proto = require("grpc-gateway.proto")
      local gateway = require("grpc-gateway.response")
      local p, err = proto.new("/etc/proto/helloworld.proto")
      if err then
        ngx.log(ngx.ERR, ("proto load error: %s"):format(err))
        return
      end
      local resp = gateway.new(p)
      err = resp:transform("helloworld.Greeter", "SayHello")
      if err then
        ngx.log(ngx.ERR, ("trasnform request error: %s"):format(err))
        return
      end
    }
    header_filter_by_lua_block {
      ngx.header["Content-Type"] = "application/json"
    }

    grpc_set_header Content-Type application/grpc;
    grpc_pass backend:9000;
  }
}

